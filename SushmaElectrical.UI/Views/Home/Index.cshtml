@model SushmaElectrical.ViewModels.PagedHomeViewModel

<div class="container">
    <div id="products" class="row">
        @foreach (var product in Model.Home)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4 product-item" data-category="@product.CategoryName" data-price="@product.Price">
                <div class="card shadow">
                    <img src="@product.ProductImages" class="card-img-top" width="100px;" height="80px;" alt="@product.ProductName">
                    <div class="card-body">
                        <div class="popup">
                            <a asp-action="ProductDetails" asp-route-id="@product.Id" class="text-decoration-none">
                                <h5 class="card-title">@product.ProductName</h5>
                                <p class="card-text">Category: @product.CategoryName</p>
                                <p class="card-text">Price: ₹@product.Price</p>
                                <p class="card-text text-danger">Discount: @(((int)product.Discount)) %</p>
                            </a>
                        </div>
                    </div>
                    <div class="card-footer">
                        <a href="#" class="btn btn-primary">Buy Now</a>
                        <button type="button" onclick="addToCart(@product.Id)" class="btn btn-outline-info">Add To Cart</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="d-flex justify-content-end">

    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-end">
            <li class="page-item @(Model.PageInfo.HasPrevious ? "" : "disabled")">
                <a class="page-link" asp-route-pageNumber="@(Model.PageInfo.PageNo - 1)" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for (int i = 1; i <= Model.PageInfo.TotalPages; i++)
            {
                <li class="page-item @(Model.PageInfo.PageNo == i ? "active" : "")">
                    <a class="page-link" asp-route-pageNumber="@i">@i</a>
                </li>
            }
            <li class="page-item @(Model.PageInfo.HasNext ? "" : "disabled")">
                <a class="page-link" asp-route-pageNumber="@(Model.PageInfo.PageNo + 1)" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
        async function addToCart(productId) {
            try {
                var response = await fetch(`/Carts/AddItem?productId=${productId}`);
                if (response.ok) {
                    var result = await response.json();
                    console.log(result);

                    var cartBadge = document.getElementById("cartCount");
                    if (cartBadge) {
                        // Update the badge content with the new cart count
                        cartBadge.textContent = result.cartCount;
                    }

                    Swal.fire({
                        position: "center",
                        icon: 'success',
                        title: 'Success',
                        text: 'Item added to cart!',
                        showConfirmButton: false,
                        timer: 1500,
                        showClass: {
                            popup: 'animate__animated animate__fadeInUp animate__faster'
                        },
                        hideClass: {
                            popup: 'animate__animated animate__fadeOutDown animate__faster'
                        }
                    }).then(() => {
                        // Reload the page
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to add item to cart.',
                    });
                }
            } catch (err) {
                console.error(err);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while adding item to cart.',
                });
            }
        }
    </script>
}



